# 构建 VitePress 站点并将其部署到 GitHub Pages 的示例工作流程
#
name: Deploy VitePress site to Pages
 
on:
  # 在针对 `main` 分支的推送上运行。如果您
  # 使用 `master` 分支作为默认分支，请将其更改为 `master`
  push:
    branches: [main]

  # 允许您从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      # - uses: pnpm/action-setup@v2 # 如果使用 pnpm，请取消注释
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释
      - name: Setup pnpm
        uses: pnpm/action-setup@v2 
        with:
          version: 8.14.0
      - name: Install dependencies
        run:  pnpm install # 或 pnpm install / yarn install /
      - name: Build with VitePress
        run: pnpm run build 
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/.vitepress/dist
          name: vitepress
    

  # 将打包同步到其他仓库
  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Download a vitepress Artifact
      uses: actions/download-artifact@v2.1.1
      with:
        name: vitepress
    - name: Commit files
      run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Deploy vitepress to GitHub Pages"
    - name: Sync to Another Repository
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: gh-pages  # 目标仓库的分支
        repository: zerxz/zerxz.github.io  # 目标仓库的用户名和仓库名
        force: true